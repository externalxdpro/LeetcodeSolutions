// Difficulty: Medium
// Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.
// Return the sum of the three integers.
// You may assume that each input would have exactly one solution.

// Example 1:
// Input: nums = [-1,2,1,-4], target = 1
// Output: 2
// Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

// Example 2:
// Input: nums = [0,0,0], target = 1
// Output: 0
// Explanation: The sum that is closest to the target is 0. (0 + 0 + 0 = 0).

// Constraints:
//     3 <= nums.length <= 500
//     -1000 <= nums[i] <= 1000
//     -104 <= target <= 104

#include <iostream>
#include <array>
#include <vector>
#include <limits>
#include <algorithm>

int threeSumClosest(std::vector<int>& nums, int target)
{
    std::sort(nums.begin(), nums.end());
    int result = std::numeric_limits<int>::max();
    int len = nums.size();
    for (int i = 0; i < len; i++)
    {
        int left = i + 1, right = len - 1;

        while (left < right)
        {
            int sum = nums[i] + nums[left] + nums[right];

            if (sum == target) return sum;

            if (result == std::numeric_limits<int>::max() ||
                (abs(target - sum) < abs(target - result)))
                result = sum;

            if (sum < target) left++;
            else right--;
        }
    }

    return result;
}

int main()
{
    std::vector<std::pair<std::vector<int>, int>> cases = {
        {{1, 2, 1, -4}, 1},
        {{0, 0, 0}, 1},
        {{527,-750,792,824,-666,492,-581,-678,269,-705,-927,685,630,137,-376,715,-975,-34,-96,901,-605,72,-218,587,282,-862,-65,-21,-840,-662,640,-221,-238,741,48,-821,265,204,-77,512,-229,-638,-135,438,-175,-155,521,-4,503,312,-816,510,841,-912,-877,754,-891,-497,-119,-969,37,-10,-204,-841,594,886,122,732,329,398,225,-249,-413,-768,-288,-473,-166,-820,761,-953,650,768,-584,-353,-791,201,843,-691,135,-526,-488,-402,690,-661,986,575,358,-627,379,-533,-207,-68,168,-546,-234,-989,991,619,950,-669,731,-444,32,826,947,509,-56,-610,836,-405,-293,-893,-538,383,634,-647,-495,-37,759,-601,-441,907,-566,-720,246,-942,-798,-187,-769,-340,825,34,568,565,-860,674,218,940,847,-508,-214,350,-418,661,-117,305,-544,-930,909,175,644,481,36,-345,-108,743,577,-434,-689,412,382,-225,-472,-649,-209,-299,896,403,-395,919,-298,-745,425,-560,-284,-715,612,308,-287,712,290,-991,76,-726,-749,116,959,314,-172,735,-391,-401,-132,-358,530,171,-146,-170,-393,-685,-933,-44,839,193,659,-731,252,-721,524,395,-215,-925,525,-864,479,563,-190,-196,-979,-354,-95,163,-316,553,461,-115,544,766,-403,882,-370,-985,-931,-684,-829,-493,233,-351,-790,-202,23,-660,578,-243,-97,-380,-785,-957,20,-907,-154,-572,854,-528,-212,625,894,-99,100,-563,627,215,-297,416,-778,493,-924,-580,-51,508,388,-305,-427,687,-499,556,66,-718,774,-247,-50,-856,-134,982,722,179,-644,-330,271,375,-923,897,-368,-342,-2,-371,-357,159,502,-291,-11,-205,6,-448,-977,805,-615,-673,-390,676,-676,107,-914,-657,177,-352,917,838,808,360,758,584,-675,-362,-571,-557,347,-6,-58,-490,-886,373,-703,217,-548,-516,895,370,300,-645,902,80,985,-478,-61,511,-634,-323,842,890,832,-231,-431,-507,-765,-760,-993,407,537,-417,-815,-241,686,776,147,814,777,-956,-510,-127,292,307,-896,-898,-311,-251,794,892}, 5176},
        {{4,0,5,-5,3,3,0,-4,-5}, -2},
    };

    for (auto [nums, target] : cases)
        std::cout << threeSumClosest(nums, target) << "\n";
}
